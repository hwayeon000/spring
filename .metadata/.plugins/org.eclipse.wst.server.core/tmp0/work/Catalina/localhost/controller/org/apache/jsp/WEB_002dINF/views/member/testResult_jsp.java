/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2023-06-20 03:15:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.board.entity.User_Result;

public final class testResult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/eGovFrame-4.0.0/workspace.edu/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ShimBeeSeo/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1612850415545L));
    _jspx_dependants.put("jar:file:/C:/eGovFrame-4.0.0/workspace.edu/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ShimBeeSeo/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("kr.board.entity.User_Result");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("\n");
      out.write("  \n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("   <meta charset=\"UTF-8\">\n");
      out.write("   <title>내 정보^오^</title>\n");
      out.write("     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("     <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js\"></script>\n");
      out.write("         <meta content=\"\" name=\"keywords\">\n");
      out.write("    <meta content=\"\" name=\"description\">\n");
      out.write("\n");
      out.write("    <!-- Favicon -->\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/favicon.ico\" rel=\"icon\">\n");
      out.write("\n");
      out.write("    <!-- Google Web Fonts -->\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n");
      out.write("    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600&family=Inter:wght@600&family=Lobster+Two:wght@700&display=swap\" rel=\"stylesheet\">\n");
      out.write("    \n");
      out.write("    <!-- Icon Font Stylesheet -->\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("    <!-- Libraries Stylesheet -->\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/lib/animate/animate.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/lib/owlcarousel/assets/owl.carousel.min.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("    <!-- Customized Bootstrap Stylesheet -->\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("    <!-- Template Stylesheet -->\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/style.css\" rel=\"stylesheet\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write(" <div class=\"container-xxl bg-white p-0\">\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\n");
      out.write("   <!-- 본문 내용 시작 -->\n");
      out.write("   \n");
      out.write("   \n");
      out.write("\n");
      out.write("   <section class=\"about-section section-padding\" id=\"section_2\">\n");
      out.write("       <div class=\"container\">\n");
      out.write("           <div class=\"row\">\n");
      out.write("\n");
      out.write("               <div class=\"col-lg-8 col-12\">\n");
      out.write("                   <div class=\"pb-5 mb-5\">\n");
      out.write("                       <div class=\"section-title-wrap mb-4\">\n");
      out.write("                           <h4 class=\"section-title text-center\">검사 결과</h4>\n");
      out.write("                          </div>\n");
      out.write("                   <div class=\"bg-light rounded\">\n");
      out.write("                     <div style=\"width: 100%; height: 100%;\">\n");
      out.write("   \n");
      out.write("   <div id=\"resetChart\">\n");
      out.write("   \n");
      out.write("                  <!--차트가 그려질 부분-->\n");
      out.write("                     <canvas id=\"myChart\" width=\"100%\" height=\"130%\" margin-left=\"15px\" padding-left=\"25px\"></canvas>\n");
      out.write("   </div>\n");
      out.write("\t\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    </div>\n");
      out.write("                   \n");
      out.write("             </div>\n");
      out.write("\n");
      out.write(" \t\t\t\t<div class=\"col-lg-8 col-12 mx-auto\">\n");
      out.write("            \t\t<div class=\"pb-5 mb-5\">\n");
      out.write("                \t\t<div class=\"section-title-wrap mb-4\">\n");
      out.write("                     \t\t<h4 class=\"section-title text-center\" style=\"font-size:30px\">검사 내용</h4>\n");
      out.write("                    \t</div>\n");
      out.write("                            \n");
      out.write("\t\t\t<!-- test용 시작-->\n");
      out.write("    \t\t\t\t\t<div class=\"testimonial-item bg-light rounded p-5\">\n");
      out.write("\n");
      out.write("                \t\t\t<div style=\"font-size:25px\" id=\"result_o_text\">\n");
      out.write("                \t\t\t</div>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t    \t\t\t\t<div class=\"testimonial-item bg-light rounded p-5\">\n");
      out.write("\t\t\t\t\t\t\t<div id=\"result_c_text\" style=\"font-size:25px\"> </div>\n");
      out.write("\t                    </div>\n");
      out.write("               \t\t</div>\n");
      out.write("           \t\t</div>\n");
      out.write("           \t<div class=\"col-lg-8 col-12 mx-auto\">\n");
      out.write("           \t\t<div class=\"pb-5 mb-5\">\n");
      out.write("                \t<div class=\"section-title-wrap mb-4\">\n");
      out.write("                    \t<h4 class=\"section-title text-center\" style=\"font-size:30px\">지도 방향</h4>\n");
      out.write("                    </div>    \n");
      out.write("    \t\t\t<div class=\"testimonial-item bg-light rounded p-5\">\n");
      out.write("\t\t\t\t\t<p id=\"result_direction\" style=\"font-size:25px;\">\n");
      out.write("\t\t\t\t\t</p>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("               </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div class=\"col-lg-12 col-12\">\n");
      out.write("               <div class=\"section-title-wrap mb-5\">\n");
      out.write("                   <h4 class=\"section-title\">이 콘텐츠는 어떠세요?</h4>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"col-lg-3 col-md-6 col-12 mb-4 mb-lg-0\">\n");
      out.write("               <div class=\"team-thumb bg-white shadow-lg\">\n");
      out.write("               \n");
      out.write("                <h4 class=\"mb-2\">1번</h4> <br>\n");
      out.write("                   <div class=\"team-info\">\n");
      out.write("                  <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/oh.png\" style=\"width: 100%; height: auto;\" class=\"verified-image img-fluid\" alt=\"\">\n");
      out.write("                  </div>\n");
      out.write("               </div>\n");
      out.write("              </div>\n");
      out.write("\n");
      out.write("        \t<div class=\"col-lg-3 col-md-6 col-12 mb-4 mb-lg-0\">\n");
      out.write("            \t<div class=\"team-thumb bg-white shadow-lg\">\n");
      out.write("\n");
      out.write("                \t<div class=\"team-info\">\n");
      out.write("                \t\t<h4 class=\"mb-2\">2번</h4> <br>\n");
      out.write("                    \t<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/why.png\" style=\"width: 100%; height: auto;\" class=\"verified-image img-fluid\" alt=\"\">\n");
      out.write("                \t</div>\n");
      out.write("               \t</div>\n");
      out.write("           </div>\n");
      out.write("    </section>\n");
      out.write("                \n");
      out.write("       \n");
      out.write("\n");
      out.write("   \n");
      out.write("   \n");
      out.write("   <!-- 본문 내용 끝 -->\n");
      out.write("   ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\n");
      out.write("</div>\n");
      out.write("   \n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/lib/wow/wow.min.js\"></script>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/lib/easing/easing.min.js\"></script>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/lib/waypoints/waypoints.min.js\"></script>\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/lib/owlcarousel/owl.carousel.min.js\"></script>\n");
      out.write("   \n");
      out.write("       <!-- Template Javascript -->\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/main.js\"></script>\n");
      out.write("    \n");
      out.write("            <!-- Chart.js 불러오기 -->\n");
      out.write("   <script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js\"></script>\n");
      out.write("      \n");
      out.write("      <!-- Chart 내용 Javascript -->\n");
      out.write("\n");
      out.write("        \n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("        \n");
      out.write("        \n");
      out.write("    \t$(document).ready(function() {\n");
      out.write("    \t\tgetResult();\n");
      out.write("    \t\t\n");
      out.write("    \t\t/* $(\"#result_o_text\").on({\n");
      out.write("    \t\t\tmouseover:function(){\n");
      out.write("    \t\t\t\tvar tg = $(this);\n");
      out.write("    \t\t\t\ttg.removeClass().addClass()\n");
      out.write("    \t\t\t\n");
      out.write("    \t\t}}) */\n");
      out.write("    \t\t\n");
      out.write("    \t\t/* $(document).on('mouseover', \".title\", (e) => {\n");
      out.write("    \t\t\tconsole.log(e);\n");
      out.write("            \tif( $(this).next().css('display') == 'none') {\n");
      out.write("            \t\t$(this).siblings().css('display', 'inline-block');\n");
      out.write("            \t} else {\n");
      out.write("            \t\t$(this).siblings().css('display', 'none');\n");
      out.write("            \t}\n");
      out.write("            })*/ \n");
      out.write("    \t});\n");
      out.write("        \n");
      out.write("        \n");
      out.write("        /* function showContent(){\n");
      out.write("        \t\n");
      out.write("        } */\n");
      out.write("        \n");
      out.write("        /* JSON형태로 사용자 검사 결과 받아오는 함수 */\n");
      out.write("    \t/* function loadResult() {\n");
      out.write("    \t\t$.ajax({\n");
      out.write("    \t\t\turl :  \"testResultOne.do\" ,\n");
      out.write("    \t\t\ttype : \"get\",\n");
      out.write("    \t\t\tdataType : \"json\",\n");
      out.write("    \t\t\tsuccess : function () {\n");
      out.write("    \t\t\t\tgetResult\n");
      out.write("    \t\t\t\t$('.content').css('display', 'none');\n");
      out.write("    \t\t\t\t$('.content').style.display = 'none';\t\n");
      out.write("    \t\t\t}, // callback 함수 요청되고나서 실행하는 함수\n");
      out.write("    \t\t\terror : function() {\n");
      out.write("    \t\t\t\talert(\"loadResult error\");\n");
      out.write("    \t\t\t}\n");
      out.write("    \t\t});\n");
      out.write("    \t} */\n");
      out.write("        \n");
      out.write("    \tfunction getResult(){\n");
      out.write("    \t\t$.ajax({\n");
      out.write("    \t\t\turl :  \"testResultOne.do\",\n");
      out.write("    \t\t\ttype:\"get\",\n");
      out.write("    \t\t\tdataType : \"json\",\n");
      out.write("    \t\t\tsuccess : function(result){\n");
      out.write("    \t\t\t\t\n");
      out.write("    \t\t\t\tconsole.log(result);\n");
      out.write("    \t\t\t\tvar result_aggressive = result.result_aggressive;\n");
      out.write("    \t    \t\tvar result_social_anxiety = result.result_social_anxiety;\n");
      out.write("    \t    \t\tvar result_depressed = result.result_depressed;\n");
      out.write("    \t    \t\tvar result_avpd = result.result_avpd;\n");
      out.write("    \t    \t\tvar result_self_esteem = result.result_self_esteem;\n");
      out.write("    \t    \t\tvar result_emotional_instability = result.result_emotional_instability;\n");
      out.write("    \t    \t\tvar result_deprivation =result.result_deprivation;\n");
      out.write("    \t    \t\tvar result_inferiority =result.result_inferiority;\n");
      out.write("    \t    \t\tvar result_regression = result.result_regression;\n");
      out.write("\t\t\t\t\tvar result_o_text = result.result_o_text.replaceAll('\\\\><strong>', 'class=\"title\" onClick=\"showContent(this.id)\"><strong>▸').replaceAll('\\t', 'style=\"display : none;\"');\n");
      out.write("\t\t\t\t\tvar result_c_text = result.result_c_text.replaceAll('\\\\><strong>', 'class=\"title\" onClick=\"showContent(this.id)\"><strong>▸').replaceAll('\\t', 'style=\"display : none;\"');\n");
      out.write("\t\t\t\t\tvar result_c_text2 = result.result_c_text2.replaceAll('\\\\><strong>', 'class=\"title\" onClick=\"showContent(this.id)\"><strong>▸').replaceAll('\\t', 'style=\"display : none;\"');\n");
      out.write("\t\t\t\t\tvar result_direction = result.result_direction.replaceAll('\\n', '</p><p>');\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tif(result.cate_seq === 1) {\n");
      out.write("    \t\t\t\t\tresult_aggressive = (result.result_aggressive / 9 * 100).toFixed(1);\n");
      out.write("        \t    \t\tresult_social_anxiety = (result.result_social_anxiety / 12 * 100).toFixed(1);\n");
      out.write("        \t    \t\tresult_depressed = (result.result_depressed / 18 * 100).toFixed(1);\n");
      out.write("        \t    \t\tresult_avpd = (result.result_avpd / 8 * 100).toFixed(1);\n");
      out.write("        \t    \t\tresult_self_esteem = (result.result_self_esteem / 29 * 100).toFixed(1);\n");
      out.write("        \t    \t\tresult_emotional_instability = (result.result_emotional_instability / 24 * 100).toFixed(1);\n");
      out.write("        \t    \t\tresult_deprivation = (result.result_deprivation / 13 * 100).toFixed(1);\n");
      out.write("        \t    \t\tresult_inferiority = (result.result_inferiority / 16 * 100).toFixed(1);\n");
      out.write("        \t    \t\tresult_regression = (result.result_regression / 11 * 100).toFixed(1);\n");
      out.write("    \t\t\t\t}\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t$('#result_o_text').text(result_o_text);\n");
      out.write("\t\t\t\t\t/* $('#result_c_text').text(result_c_text); */\n");
      out.write("\t\t\t\t\tdocument.getElementById('result_o_text').innerHTML = result_o_text;\n");
      out.write("\t\t\t\t\tdocument.getElementById('result_c_text').innerHTML = result_c_text + result_c_text2;\n");
      out.write("\t\t\t\t\tdocument.getElementById('result_direction').innerHTML = result_direction;\n");
      out.write("\t\t\t\t\t/* $('result_direction').text(result_direction); */\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tdocument.getElementById('resetChart').innerHTML = \"\"; \n");
      out.write("\t\t\t\t\tdocument.getElementById('resetChart').innerHTML = \"<canvas id='myChart' width='100%' height='130%' margin-left='15px' padding-left='25px'></canvas>\"; \n");
      out.write("\t\t\t\t\t\n");
      out.write("    \t            var context = document.getElementById('myChart').getContext('2d');\n");
      out.write("    \t            var myChart = new Chart(context, {\n");
      out.write("    \t                type: 'bar', // 차트의 형태\n");
      out.write("    \t                data: { // 차트에 들어갈 데이터\n");
      out.write("    \t                    labels: [\n");
      out.write("    \t                        //x 축\n");
      out.write("    \t                        '공격성','사회불안','우울','대인회피','자존감','정서불안','애정결핍','열등감','퇴행'\n");
      out.write("    \t                    ],\n");
      out.write("    \t                    datasets: [\n");
      out.write("    \t                        { //데이터\n");
      out.write("    \t                            label: '심리검사 결과(%)', //차트 제목\n");
      out.write("    \t                            fill: false, // line 형태일 때, 선 안쪽을 채우는지 안채우는지\n");
      out.write("    \t                            data: [\n");
      out.write("    \t                            \tresult_aggressive,result_social_anxiety,result_depressed,result_avpd,result_self_esteem,result_emotional_instability,result_deprivation,result_inferiority,result_regression //x축 label에 대응되는 데이터 값\n");
      out.write("    \t                            ],\n");
      out.write("    \t                            backgroundColor: [\n");
      out.write("    \t                                //색상\n");
      out.write("    \t                                'rgba(255, 99, 132, 0.2)',\n");
      out.write("    \t                                'rgba(54, 162, 235, 0.2)',\n");
      out.write("    \t                                'rgba(255, 206, 86, 0.2)',\n");
      out.write("    \t                                'rgba(75, 192, 192, 0.2)',\n");
      out.write("    \t                                'rgba(153, 102, 255, 0.2)',\n");
      out.write("    \t                                'rgba(255, 159, 64, 0.2)',\n");
      out.write("    \t                                'rgba(255, 99, 132, 0.2)',\n");
      out.write("    \t                                'rgba(54, 162, 235, 0.2)',\n");
      out.write("    \t                                'rgba(255, 206, 86, 0.2)'\n");
      out.write("    \t                            ],\n");
      out.write("    \t                            borderColor: [\n");
      out.write("    \t                                //경계선 색상\n");
      out.write("    \t                                'rgba(255, 99, 132, 1)',\n");
      out.write("    \t                                'rgba(54, 162, 235, 1)',\n");
      out.write("    \t                                'rgba(255, 206, 86, 1)',\n");
      out.write("    \t                                'rgba(75, 192, 192, 1)', \n");
      out.write("    \t                                'rgba(153, 102, 255, 1)',\n");
      out.write("    \t                                'rgba(255, 159, 64, 1)',\n");
      out.write("    \t                                'rgba(255, 99, 132, 1)',\n");
      out.write("    \t                                'rgba(54, 162, 235, 1)',\n");
      out.write("    \t                                'rgba(255, 206, 86, 1)'\n");
      out.write("    \t                            ],\n");
      out.write("    \t                            borderWidth: 1 //경계선 굵기\n");
      out.write("    \t                        }/* ,\n");
      out.write("    \t                        {\n");
      out.write("    \t                            label: 'test2',\n");
      out.write("    \t                            fill: false,\n");
      out.write("    \t                            data: [\n");
      out.write("    \t                                8, 34, 12, 24\n");
      out.write("    \t                            ],\n");
      out.write("    \t                            backgroundColor: 'rgb(157, 109, 12)',\n");
      out.write("    \t                            borderColor: 'rgb(157, 109, 12)'\n");
      out.write("    \t                        } */\n");
      out.write("    \t                    ]\n");
      out.write("    \t                },\n");
      out.write("    \t                options: {\n");
      out.write("    \t                    scales: {\n");
      out.write("    \t                        yAxes: [\n");
      out.write("    \t                            {\n");
      out.write("    \t                            \tticks: {\n");
      out.write("    \t                            \t\t/* y축 설정 변경 */\n");
      out.write("    \t            \t\t\t\t\t\tmin: 0,\n");
      out.write("    \t            \t\t\t\t\t\tmax: 100,\n");
      out.write("    \t            \t\t\t\t\t\tstepSize : 10,\n");
      out.write("    \t            \t\t\t\t\t\tfontSize : 14,\n");
      out.write("    \t            \t\t\t\t\t\t\n");
      out.write("    \t            \t\t\t\t\t\t}\n");
      out.write("    \t                            }\n");
      out.write("    \t                        ]\n");
      out.write("    \t                    }\n");
      out.write("    \t                }\n");
      out.write("    \t            });\n");
      out.write("    \t            \t\n");
      out.write("    \t            }\n");
      out.write("    \t    \t\t\n");
      out.write("    \t    \t\t\n");
      out.write("    \t    \t\t\n");
      out.write("    \t    \t\t\n");
      out.write("    \t\t\t\n");
      out.write("    \t\t\t,error : function(){\n");
      out.write("    \t\t\t\talert(\"error\");\n");
      out.write("    \t\t\t}\n");
      out.write("    \t\t});\n");
      out.write("    \t}\n");
      out.write("    \t\n");
      out.write("    \t// p태그에 따른 컨텐츠 더보기 함수\n");
      out.write("    \tfunction showContent(clicked_id) {\n");
      out.write("    \t\tconsole.log(clicked_id);\n");
      out.write("    \t\tvar names = [\"window\", \"door\", \"roof\", \"wall\", \"c_smoke\", \"chimney\", \"sun\", \"aggressive\", \"anxiety\", \"depressed\", \"avpd\", \"esteem\", \"instability\", \"deprivation\", \"inferiority\", \"regression\"];\n");
      out.write("    \t\tvar title = $(\"#\"+clicked_id+\">strong\").text();\n");
      out.write("    \t\tfor(var i = 0; i < names.length; i++) {\n");
      out.write("    \t\t\tif(clicked_id == names[i]) {\n");
      out.write("    \t\t\t\tif( $(\"#\"+names[i]+\"C\").css(\"display\") == \"none\" ) {\n");
      out.write("    \t\t\t\t\t$(\"#\"+names[i]+\"C\").css(\"display\", \"inline-block\");\n");
      out.write("    \t\t\t\t\t$(\"#\"+clicked_id+\">strong\").text(title.replace(\"▸\", \"▾\"));\n");
      out.write("    \t\t\t\t} else {\n");
      out.write("    \t\t\t\t\t$(\"#\"+names[i]+\"C\").css(\"display\", \"none\");\n");
      out.write("    \t\t\t\t\t$(\"#\"+clicked_id+\">strong\").text(title.replace(\"▾\", \"▸\"));\n");
      out.write("    \t\t\t\t}\n");
      out.write("    \t\t\t}\n");
      out.write("    \t\t}\n");
      out.write("    \t}\n");
      out.write("    \t\n");
      out.write("       </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/member/testResult.jsp(7,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /WEB-INF/views/member/testResult.jsp(7,0) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/member/testResult.jsp(7,0) '${pageContext.request.contextPath}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }
}
